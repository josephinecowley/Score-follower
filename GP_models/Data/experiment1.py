# This analyses the data found in an experiment measuring the Log Marginal Liklihood
# The parameters used were:
# f = i; M=16; sigma_f=5; v = 2.37; T = 0.465; (B is varying, depending on f)
# Each likelihood was calculated using 1000 samples, the total time being 3:35:36 and 183.8 s/it
# THough note there were periods when the computer was off - so roughly 8s/it or a total of 2 hours

import numpy as np
import matplotlib.pyplot as plt

x = np.arange(0, 800, 5)
y = np.array([-6610.54206237, -6514.36835798, -6408.60351725, -6265.89486679, -6030.47018035, -5526.8912927, -3544.13536245,  2350.0419153,  2347.23897814,  2313.84015592,  2511.80913901,  1707.24521388,  2124.79512824,  1077.03133906,  2714.4451223,  767.08597847,   315.57841825,  2384.91744174,  2217.21936665, -497.33617612, -2695.44010439, -1215.5310891,   1464.86086485,  2751.67963455,  2382.50177213,   561.69691091, -2300.09821214, -4809.00546706, -4996.42049506, -5044.51488247, -4267.37614417, -2096.28478097,   -86.21734581,  1725.94120276,  2700.676437,  3174.87415641,  2526.07647485,  1524.80855485, -380.1134484, -2606.64822137, -4433.54345085, -5643.4638486, -5695.03635385, -5490.35887589, -5565.10598835, -5822.93950271, -5662.56715853, -5676.41247494, -5960.82557416, -6047.38294931, -6110.0243253, -5980.30893975, -5769.25466043, -5700.85675796, -5765.77790425, -5629.59649781, -5453.73264148, -5827.17200314, -5894.16734647, -5560.7482522, -4898.4916, -3824.24185871, -2400.26156996, -1271.13087389, -65.76774929,  1017.5891423,   1862.12011747,  2401.17597093,  2872.37492147,  3293.08596139,  3499.90791376,  3054.90791613,  2665.18643475,  2249.05460003,  1655.52069136,   790.60034459, -314.5184434, -1574.25659849, -2816.40896569, -3938.48681437, -
             4840.05879272, -5632.0376407, -5955.09203231, -6024.1096119, -5934.7764057, -5841.60990986, -5806.40236884, -5818.3432507, -5968.89530654, -6124.36583252, -6153.73962588, -6139.48575787, -5975.17457782, -5744.32397361, -5858.33006869, -6026.19300418, -6173.86840356, -6272.44683541, -6340.06822244, -6418.2232599, -6452.08013087, -6434.75510485, -6395.11314238, -6361.47860614, -6296.00655855, -6260.12462055, -6366.91677092, -6458.23633039, -6524.0188603, -6550.53213904, -6549.27499583, -6405.37688701, -6287.07461225, -6337.32665994, -6468.62435374, -6503.67918998, -6538.5914093, -6546.16102223, -6572.84491979, -6575.26405211, -6559.3299018, -6530.37948806, -6499.83726532, -6508.90384946, -6540.77377807, -6560.44234533, -6513.08512035, -6507.31413216, -6546.77569492, -6540.43408462, -6498.52058885, -6454.88803546, -6447.49181028, -6460.29217253, -6454.88562984, -6391.95107021, -6282.53697021, -6160.22138046, -6074.73048281, -5945.01010182, -5827.03604991, -5840.49335284, -6000.3732652, -6247.37429905, -6398.29561272, -6495.90349749, -6538.84053786, -6538.02948529, -6540.3387204, -6552.45869303, -6579.88062389, -6596.47238012, -6610.50349806, -6616.23911399, -6625.42535225, -6618.14835629, -6612.34582961, -6571.25040333, -6525.19702835, -6525.91270993])
# Add grid to see spacing of samples
for i in x:
    plt.axvline(x=i, color='grey', linestyle='-', lw=0.2)
# Add grid lines at each y-axis tick
plt.grid(axis='y', linestyle='-', alpha=0.7)

plt.plot(x, y)
plt.title("Log Marginal Likelihood for varying frequency of piano at 349 Hz")
plt.xlabel("Fundamental frequency of single source")
plt.ylabel("Log Marginal Likelihood")
plt.yticks(np.arange(min(y), max(y+1000), step=500))

# Add lines to indicate the fundamental frequencies and all those which are also half
for i in range(4):
    plt.axvline(x=349/2**i, color='pink', linestyle='--')
plt.axvline(x=349*2, color='pink', linestyle='--')
plt.axvline(x=349, color='red', linestyle='--')
# Get the current figure
fig = plt.gcf()

# Save the figure using np.save()
plt.savefig(f'{"Experiment 1"}')
plt.show()
